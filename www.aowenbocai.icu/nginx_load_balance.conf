# Nginx负载均衡配置
# 基于压力测试结果的优化配置

# 上游服务器组配置
upstream php_backend {
    # 负载均衡方法: least_conn (最少连接)
    least_conn;
    
    # 本地PHP-FPM服务器
    server 127.0.0.1:9000 weight=3 max_fails=3 fail_timeout=30s;
    
    # 如果有多台服务器，可以添加更多upstream
    # server 192.168.1.101:9000 weight=2 max_fails=3 fail_timeout=30s;
    # server 192.168.1.102:9000 weight=2 max_fails=3 fail_timeout=30s;
    
    # 保持连接
    keepalive 32;
}

# Redis集群配置 (如果使用多个Redis实例)
upstream redis_backend {
    server 127.0.0.1:6379 weight=1 max_fails=2 fail_timeout=10s;
    # server 127.0.0.1:6380 weight=1 max_fails=2 fail_timeout=10s backup;
}

# 静态资源服务器组
upstream static_backend {
    server 127.0.0.1:80 weight=1;
    # 可以添加CDN或其他静态资源服务器
    # server cdn.example.com:80 weight=2;
}

# 主服务器配置
server {
    listen 80;
    listen 443 ssl http2;
    server_name www.aowenbocai.icu;
    
    # SSL配置
    ssl_certificate /www/server/panel/vhost/cert/www.aowenbocai.icu/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/www.aowenbocai.icu/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 根目录
    root /www/wwwroot/www.aowenbocai.icu;
    index index.php index.html index.htm;
    
    # 日志配置
    access_log /www/wwwlogs/www.aowenbocai.icu.log;
    error_log /www/wwwlogs/www.aowenbocai.icu.error.log;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 静态资源缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # 如果有静态资源服务器集群
        # proxy_pass http://static_backend;
    }
    
    # API接口负载均衡
    location /api/ {
        # 限制请求频率
        limit_req zone=api burst=20 nodelay;
        
        # 代理到PHP后端
        include fastcgi_params;
        fastcgi_pass php_backend;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # 连接超时设置
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        
        # 缓存配置
        fastcgi_cache_valid 200 302 10m;
        fastcgi_cache_valid 404 1m;
    }
    
    # PHP文件处理
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass php_backend;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # 优化的FastCGI设置
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 128k;
    }
    
    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 安全配置
    location ~ /\. {
        deny all;
    }
    
    location ~ /(config|install|upgrade)/ {
        deny all;
    }
}

# 全局优化配置
# 工作进程数 (建议设置为CPU核心数)
worker_processes 2;

# 每个工作进程的最大连接数
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP配置块
http {
    # 基础设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # 请求限制
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # 连接限制
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 20;
    
    # 缓冲区大小
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # FastCGI缓存
    fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    
    # 包含其他配置文件
    include /etc/nginx/mime.types;
    include /etc/nginx/conf.d/*.conf;
}
