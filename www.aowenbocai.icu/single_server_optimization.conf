# 单服务器负载均衡优化配置
# 针对当前2核4GB服务器的最优配置
# 为后期多服务器扩展预留接口

# Nginx主配置优化
worker_processes 2;                    # 匹配CPU核心数
worker_rlimit_nofile 65535;
worker_cpu_affinity 01 10;            # CPU亲和性绑定

events {
    worker_connections 2048;           # 增加连接数
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # 基础性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    
    # 缓冲区优化 - 基于压力测试结果
    client_body_buffer_size 256k;
    client_max_body_size 50m;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 8k;
    
    # 超时设置优化
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    
    # Gzip压缩优化
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 请求限制 - 防止DDoS
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=game:10m rate=50r/s;
    
    # 连接限制
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    limit_conn perip 20;
    limit_conn perserver 1000;
    
    # FastCGI缓存配置
    fastcgi_cache_path /tmp/nginx_fastcgi_cache 
                       levels=1:2 
                       keys_zone=FASTCGI:100m 
                       inactive=60m 
                       max_size=1g;
    fastcgi_cache_key "$scheme$request_method$host$request_uri$query_string";
    
    # 单服务器upstream配置（为扩展做准备）
    upstream php_backend {
        # 当前单服务器配置
        server 127.0.0.1:9000 weight=10 max_fails=3 fail_timeout=30s;
        
        # 备用进程池（高负载时启用）
        # server 127.0.0.1:9001 weight=5 max_fails=3 fail_timeout=30s backup;
        
        # 后期扩展服务器配置模板
        # server 192.168.1.101:9000 weight=8 max_fails=3 fail_timeout=30s;
        # server 192.168.1.102:9000 weight=8 max_fails=3 fail_timeout=30s;
        
        keepalive 16;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # API专用upstream（后期可启用）
    upstream api_backend {
        server 127.0.0.1:9002 weight=10 max_fails=2 fail_timeout=15s;
        # server 192.168.1.101:9002 weight=8 max_fails=2 fail_timeout=15s;
        keepalive 8;
    }
    
    # 管理后台upstream（后期可启用）
    upstream admin_backend {
        server 127.0.0.1:9003 weight=10 max_fails=2 fail_timeout=30s;
        keepalive 4;
    }
    
    # 主站点配置
    server {
        listen 80;
        listen 443 ssl http2;
        server_name www.aowenbocai.icu;
        root /www/wwwroot/www.aowenbocai.icu;
        index index.php index.html;
        
        # SSL配置
        ssl_certificate /www/server/panel/vhost/cert/www.aowenbocai.icu/fullchain.pem;
        ssl_certificate_key /www/server/panel/vhost/cert/www.aowenbocai.icu/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 日志配置
        access_log /www/wwwlogs/www.aowenbocai.icu.log combined buffer=64k flush=5s;
        error_log /www/wwwlogs/www.aowenbocai.icu.error.log warn;
        
        # 静态资源优化
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            access_log off;
            
            # 启用压缩
            gzip_static on;
        }
        
        # 游戏API接口优化
        location ^~ /api/game/ {
            limit_req zone=game burst=100 nodelay;
            
            include fastcgi_params;
            fastcgi_pass php_backend;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            
            # 游戏API专用优化
            fastcgi_connect_timeout 5s;
            fastcgi_send_timeout 10s;
            fastcgi_read_timeout 10s;
            fastcgi_buffer_size 32k;
            fastcgi_buffers 8 32k;
            
            # 短时间缓存
            fastcgi_cache FASTCGI;
            fastcgi_cache_valid 200 1m;
            fastcgi_cache_bypass $http_pragma $http_authorization;
        }
        
        # 普通API接口
        location ^~ /api/ {
            limit_req zone=api burst=50 nodelay;
            
            include fastcgi_params;
            fastcgi_pass php_backend;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            
            # 标准FastCGI设置
            fastcgi_connect_timeout 10s;
            fastcgi_send_timeout 30s;
            fastcgi_read_timeout 30s;
            fastcgi_buffer_size 64k;
            fastcgi_buffers 4 64k;
            
            # 缓存配置
            fastcgi_cache FASTCGI;
            fastcgi_cache_valid 200 5m;
            fastcgi_cache_valid 404 1m;
        }
        
        # 登录接口特殊处理
        location ^~ /api/login {
            limit_req zone=login burst=10 nodelay;
            
            include fastcgi_params;
            fastcgi_pass php_backend;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            
            # 登录接口不缓存
            fastcgi_cache_bypass 1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # 管理后台（后期可分离到专用upstream）
        location ^~ /admin/ {
            # 限制访问IP（生产环境建议配置）
            # allow 192.168.1.0/24;
            # deny all;
            
            include fastcgi_params;
            fastcgi_pass php_backend;  # 后期可改为 admin_backend
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            
            # 管理后台优化设置
            fastcgi_connect_timeout 30s;
            fastcgi_send_timeout 300s;
            fastcgi_read_timeout 300s;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 128k;
        }
        
        # PHP文件处理
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass php_backend;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            
            # 标准设置
            fastcgi_connect_timeout 30s;
            fastcgi_send_timeout 60s;
            fastcgi_read_timeout 60s;
            fastcgi_buffer_size 64k;
            fastcgi_buffers 4 64k;
            
            # 缓存设置
            fastcgi_cache FASTCGI;
            fastcgi_cache_valid 200 10m;
        }
        
        # 健康检查
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 性能监控端点
        location = /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        
        location = /fpm-status {
            include fastcgi_params;
            fastcgi_pass php_backend;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        
        # 安全配置
        location ~ /\. {
            deny all;
            access_log off;
        }
        
        location ~ /(config|install|upgrade|\.git)/ {
            deny all;
            access_log off;
        }
    }
    
    # 扩展配置说明
    # 当需要添加新服务器时：
    # 1. 在upstream中添加新的server行
    # 2. 调整weight权重分配
    # 3. 配置健康检查
    # 4. 更新监控脚本
    
    # 性能监控建议：
    # 1. 监控CPU使用率，超过70%考虑扩展
    # 2. 监控内存使用率，超过80%需要优化
    # 3. 监控响应时间，超过500ms需要调优
    # 4. 监控错误率，超过1%需要排查
}
